/****************************************************************************
** Copyleft (C) 2009 Мясников Алексей Сергеевич.
** Contact: AlekseyMyasnikov@yandex.ru
**          amyasnikov@npomis.ru
**          AlekseyMyasnikov@mail.ru
**          MyasnikovAleksey@mail.ru
** Этот файл является частью реализации библиотеки островного генетического
** алгоритма с динамическим распределением вероятностей выбора генетических
** операторов в каждой группе операторов
** Данная библиотека является свободным программным обеспечением. Вы вправе
** распространять её и/или модифицировать в соответствии с условиями версии 3
** либо по вашему выбору с условиями более поздней версии Стандартной
** Общественной Лицензии Ограниченного Применения GNU, опубликованной
** Free Software Foundation.
** Я распространяю эту библиотеку в надежде на то, что она будет вам
** полезной, однако НЕ ПРЕДОСТАВЛЯЮ НА НЕЕ НИКАКИХ ГАРАНТИЙ, в том числе
** ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ
** В КОНКРЕТНЫХ ЦЕЛЯХ. Для получения более подробной информации ознакомьтесь
** со Стандартной Общественной Лицензией Ограниченного Применений GNU в
** файле LICENSE в корне исходных текстов проекта или по адресу:
** http://www.gnu.org/copyleft/lgpl.html.
** Обращаю Ваше внимание на то, что библиотека InsularGenetica
** зарегистрирована Российским агенством по патентам и товарным знакам
** (РОСПАТЕНТ), о чем выдано "Свидетельство об официальной регистрации
** программы для ЭВМ" за № FIXME от FIXME FIXME FIXME года. Копия
** свидетельства о регистрации представлена в файле CERTIFICATE
** в корне проекта.
** Это не накладывает на конечных разработчиков/пользователей никаких
** дополнительных ограничений, кроме предусмотренных GNU Lesser GPL,
** ПРИ СОХРАНЕНИИ ИНФОРМАЦИИ О РАЗРАБОТЧИКАХ ЭТОЙ БИБЛИОТЕКИ.
****************************************************************************/
/**
 * @file    CRastrigin.h
 * @brief   Файл содержит класс CRastrigin,
 *          который реализует тестовую целевую функцию Растригина.
 * @date    10/02/2009
**/

#ifndef CRASTRIGIN_MODULE_H_INCLUDED
#define CRASTRIGIN_MODULE_H_INCLUDED

#include "../../include/export.h"
#include "../../include/CFitnessHelper.h"
#include "../../idl/IFitness.h"
#include "../../include/CChromosome.h"

class QString;

using namespace GeneticAlgorithm;

Q_DECL_EXPORT struct CRastrigin : virtual public IFitness,
                                  virtual public CFitnessHelper
{
    /**
     * @brief   Базовый конструктор
    **/
    CRastrigin();
    /**
     * @brief   Конструктор
     * @param   count  - количество переменных целевой функции
     * @param   filter - Фильтрация хромосом по доле единичных битов [0..1]
    **/
    CRastrigin(unsigned int count, bool invert = false, double filter = -1.);
    /**
     * @brief   Деструктор
    **/
    ~CRastrigin();
    /**
     * @brief   Метод вычисления значения целевой функции
     * @return  значение функции
    **/
    double calc(const CChromosome& chr);
    /**
     * @brief   Метод получения наименования функции
     * @return  наименование функции
    **/
    const QString name();
private:
    bool            m_invert;
    double          m_filter;
};

#endif // CTESTFITNESSMODULE_H_INCLUDED
